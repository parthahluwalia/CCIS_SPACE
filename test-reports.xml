null
----
Response {
  domain: null,
  _events: {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res: 
   IncomingMessage {
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: [Object],
        encoding: 'utf8',
        resumeScheduled: false },
     readable: false,
     domain: null,
     _events: 
      { end: [Object],
        data: [Object],
        close: [Function: bound emit],
        error: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket: 
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 309,
        _bytesDispatched: 137,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 309,
        _bytesDispatched: 137,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: 
      { 'x-powered-by': 'Express',
        'content-type': 'application/json; charset=utf-8',
        'content-length': '106',
        etag: 'W/"6a-YFgA5bf6uj3kv+EFQwZcbw"',
        date: 'Wed, 16 Mar 2016 05:20:52 GMT',
        connection: 'close' },
     rawHeaders: 
      [ 'X-Powered-By',
        'Express',
        'Content-Type',
        'application/json; charset=utf-8',
        'Content-Length',
        '106',
        'ETag',
        'W/"6a-YFgA5bf6uj3kv+EFQwZcbw"',
        'Date',
        'Wed, 16 Mar 2016 05:20:52 GMT',
        'Connection',
        'close' ],
     trailers: {},
     rawTrailers: [],
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client: 
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 309,
        _bytesDispatched: 137,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        parser: null,
        _httpMessage: [Object],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _consuming: true,
     _dumped: false,
     req: 
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Object],
        connection: [Object],
        _header: 'GET /api/booking HTTP/1.1\r\nHost: 127.0.0.1:6969\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/1.2.0\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: null,
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/api/booking',
        parser: null,
        res: [Circular] },
     text: '{"name":"Kung Fu Panda","email":"dragon.warrior@pandas.com","purpose":"Sleeping","resources":"Just a bed"}',
     read: [Function],
     body: 
      { name: 'Kung Fu Panda',
        email: 'dragon.warrior@pandas.com',
        purpose: 'Sleeping',
        resources: 'Just a bed' } },
  request: 
   Test {
     domain: null,
     _events: { end: [Function: bound ] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _agent: false,
     _formData: null,
     method: 'get',
     url: 'http://127.0.0.1:6969/api/booking',
     header: {},
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     qsRaw: [],
     _redirectList: [],
     app: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        _connections: 0,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _pendingResponseData: 0,
        _connectionKey: '4:127.0.0.1:6969' },
     req: 
      ClientRequest {
        domain: null,
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: false,
        sendDate: false,
        _removedHeader: {},
        _contentLength: 0,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Object],
        connection: [Object],
        _header: 'GET /api/booking HTTP/1.1\r\nHost: 127.0.0.1:6969\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/1.2.0\r\nConnection: close\r\n\r\n',
        _headers: [Object],
        _headerNames: [Object],
        _onPendingData: null,
        agent: [Object],
        socketPath: undefined,
        method: 'GET',
        path: '/api/booking',
        parser: null,
        res: [Object] },
     protocol: 'http:',
     host: '127.0.0.1:6969',
     _callback: [Function],
     res: 
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Object],
        text: '{"name":"Kung Fu Panda","email":"dragon.warrior@pandas.com","purpose":"Sleeping","resources":"Just a bed"}',
        read: [Function],
        body: [Object] },
     response: [Circular],
     _timeout: 0,
     called: true },
  req: 
   ClientRequest {
     domain: null,
     _events: { drain: [Function], error: [Function], response: [Function] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: false,
     sendDate: false,
     _removedHeader: {},
     _contentLength: 0,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket: 
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 309,
        _bytesDispatched: 137,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     connection: 
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: null,
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 8,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: false,
        allowHalfOpen: false,
        destroyed: true,
        bytesRead: 309,
        _bytesDispatched: 137,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        parser: null,
        _httpMessage: [Circular],
        read: [Function],
        _consuming: true,
        _idleNext: null,
        _idlePrev: null,
        _idleTimeout: -1 },
     _header: 'GET /api/booking HTTP/1.1\r\nHost: 127.0.0.1:6969\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/1.2.0\r\nConnection: close\r\n\r\n',
     _headers: 
      { host: '127.0.0.1:6969',
        'accept-encoding': 'gzip, deflate',
        'user-agent': 'node-superagent/1.2.0' },
     _headerNames: 
      { host: 'Host',
        'accept-encoding': 'Accept-Encoding',
        'user-agent': 'User-Agent' },
     _onPendingData: null,
     agent: 
      Agent {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     method: 'GET',
     path: '/api/booking',
     parser: null,
     res: 
      IncomingMessage {
        _readableState: [Object],
        readable: false,
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Object],
        connection: [Object],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Object],
        trailers: {},
        rawTrailers: [],
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Object],
        _consuming: true,
        _dumped: false,
        req: [Circular],
        text: '{"name":"Kung Fu Panda","email":"dragon.warrior@pandas.com","purpose":"Sleeping","resources":"Just a bed"}',
        read: [Function],
        body: [Object] } },
  links: {},
  text: '{"name":"Kung Fu Panda","email":"dragon.warrior@pandas.com","purpose":"Sleeping","resources":"Just a bed"}',
  body: 
   { name: 'Kung Fu Panda',
     email: 'dragon.warrior@pandas.com',
     purpose: 'Sleeping',
     resources: 'Just a bed' },
  files: {},
  buffered: true,
  headers: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '106',
     etag: 'W/"6a-YFgA5bf6uj3kv+EFQwZcbw"',
     date: 'Wed, 16 Mar 2016 05:20:52 GMT',
     connection: 'close' },
  header: 
   { 'x-powered-by': 'Express',
     'content-type': 'application/json; charset=utf-8',
     'content-length': '106',
     etag: 'W/"6a-YFgA5bf6uj3kv+EFQwZcbw"',
     date: 'Wed, 16 Mar 2016 05:20:52 GMT',
     connection: 'close' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  charset: 'utf-8',
  type: 'application/json',
  setEncoding: [Function: bound ],
  redirects: [] }
<testsuite name="Mocha Tests" tests="2" failures="0" errors="0" skipped="0" timestamp="Wed, 16 Mar 2016 05:20:52 GMT" time="0.049">
<testcase classname="Booking Tests" name="Pass" time="0.001"/>
<testcase classname="Booking Tests" name="A server should respond with status 200 on /api/booking GET" time="0.005"/>
</testsuite>
